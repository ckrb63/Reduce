{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"INPUT_EMAIL\") {\n    return {\n      value: action.value,\n      isvalid: action.value.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"VALID_CHECK\") {\n    return {\n      value: state.value,\n      isvalid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'INPUT_PASSWORD') {\n    return {\n      value: action.value,\n      isvalid: action.value.trim().length > 6 && action.isvalid\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, emailDispatch] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: false\n  });\n  const [passwordState, passwordDispatch] = useReducer(passwordReducer, {\n    value: '',\n    isvalid: false\n  }); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //     console.log(\"check\");\n  //   }, 500);\n  //   return () => {\n  //     clearTimeout(identifier);\n  //     console.log(\"wait...\");\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    emailDispatch({\n      type: \"INPUT_EMAIL\",\n      value: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    passwordDispatch({\n      type: \"INPUT_PASSWORD\",\n      value: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes(\"@\")\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({\n      type: \"VALID_CHECK\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    passwordDispatch({\n      type: \"VALID_CHECK\",\n      isvalid: emailState.isvalid\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isvalid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isvalid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !passwordState.isvalid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"5aXb03IdcRLZ0ctmHZangSHvSKg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/user/Desktop/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","isvalid","includes","passwordReducer","trim","length","Login","props","emailState","emailDispatch","passwordState","passwordDispatch","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"INPUT_EMAIL\") {\n    return {\n      value: action.value,\n      isvalid: action.value.includes(\"@\"),\n    };\n  }\n  if (action.type === \"VALID_CHECK\") {\n    return {\n      value: state.value,\n      isvalid: state.value.includes(\"@\"),\n    };\n  }\n  return { value: \"\", isvalid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'INPUT_PASSWORD') {\n    return {\n      value : action.value,\n      isvalid : action.value.trim().length > 6 && action.isvalid\n    };\n  }\n};\n\nconst Login = (props) => {\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, emailDispatch] = useReducer(emailReducer, {\n    value: \"\",\n    isvalid: false,\n  });\n  const [passwordState, passwordDispatch] = useReducer(passwordReducer, {\n    value : '',\n    isvalid : false\n  })\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //     console.log(\"check\");\n  //   }, 500);\n  //   return () => {\n  //     clearTimeout(identifier);\n  //     console.log(\"wait...\");\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    emailDispatch({ type: \"INPUT_EMAIL\", value: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    passwordDispatch({type: \"INPUT_PASSWORD\", value: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.value.includes(\"@\")\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    emailDispatch({\n      type: \"VALID_CHECK\",\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    passwordDispatch({type: \"VALID_CHECK\", isvalid: emailState.isvalid});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isvalid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isvalid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!passwordState.isvalid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}